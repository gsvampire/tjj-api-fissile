<?php
/**
 * Created by PhpStorm.
 * User: admin
 * Date: 2019/6/3
 * Time: 17:14
 */

namespace ding;

interface  robotInterface {
    const NOTICEURL = 'https://oapi.dingtalk.com/robot/send?access_token=85f10b374d20ad63ad16cba6af7838f1ad6e8c8107a9636ed4545f018f1410b4';
    const NOTICACT = 'https://oapi.dingtalk.com/robot/send?access_token=6514ae2ed4add2c12fe347d59104d51a15d53bf5415414c7f0eae044f4f75538';
    function  notice();
}

class robot implements  robotInterface{
    protected $res = 0;
    protected $message = '';
    protected $code = array(
        '-2' => 'curl请求出错',
        '-1' => '请求失败',
        '0' => '请求成功',
    );
    /**
     * @return mixed
     */
    public function getRes()
    {
        return $this->res;
    }

    /**
     * @param mixed $res
     */
    public function setRes($res)
    {
        $this->res = $res;
    }

    /**
     * @return mixed
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * @param mixed $message
     */
    public function setMessage($message)
    {
        $this->message = $message;
    }

    function notice()
    {
        // TODO: Implement notice() method.
    }
    /**
     * @param $type 1:string  0:json
     * @param $res :data
     * @param $method 1:GET 0:POST
     * @param $out 0:无返回值   1;有返回值
     */
    function curl($url, $method = 1,$out = 0,$type = 1 ,$res=''){
        $curl = curl_init($url);
        curl_setopt($curl,CURLOPT_RETURNTRANSFER, 1);
        if (!$type){
            curl_setopt($curl, CURLOPT_HTTPHEADER, array(
                    'Content-Type: application/json',
                    'Content-Length: ' . strlen($res))
            );
        }
        if (!$method){
            curl_setopt($curl,CURLOPT_POST, 1);
        }
        curl_setopt($curl, CURLOPT_TIMEOUT , 3);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($curl, CURLOPT_POSTFIELDS , ($res));
        $code = curl_errno($curl);
        $data = curl_exec($curl);
        curl_close($curl);
        if($code){
            $this->exec("-2", ",code值为:{$code}");
        }
        if ($out){
            return $data;
        }
    }


    function exec($code, $otherText =''){
//        exit(json_encode(array(
//            'res' => $code,
//            'message' => $this->code[$code].$otherText
//        )));
        return array(
            'res' => $code,
            'message' => $this->code[$code].$otherText
        );
    }
}

class TAPD extends robot {
    private $workDayCheck = 'http://tool.bitefu.net/jiari/?d={$1}';
    private $msgtype = 'text';
    private $content = "各位小伙伴们，需要确认TAPD任务了\n\r{#1}";
    private $otherContent = '相关负责人需要发送周报';
    private $resultData;
    /**
     * @return string
     */
    public function getWorkDayCheck()
    {
        return $this->workDayCheck;
    }

    /**
     * @param string $workDayCheck
     */
    public function setWorkDayCheck($workDayCheck)
    {
        $this->workDayCheck = $workDayCheck;
    }

    /**
     * @return string
     */
    public function getMsgtype()
    {
        return $this->msgtype;
    }

    /**
     * @param string $msgtype
     */
    public function setMsgtype($msgtype)
    {
        $this->msgtype = $msgtype;
    }

    /**
     * @return string
     */
    public function getContent()
    {
        return $this->content;
    }

    /**
     * @param string $content
     */
    public function setContent($content)
    {
        $this->content = $content;
    }

    /**
     * @return mixed
     */
    public function getResultData()
    {
        return array(
            'msgtype' => $this->getMsgtype(),
            'text' => array(
                'content' => $this->getContent()
            )
        );
    }

    /**
     * @param mixed $resultData
     */
    public function setResultData($resultData)
    {
        $this->resultData = $resultData;
    }


    function notice()
    {
        parent::notice(); // TODO: Change the autogenerated stub
        $day = date("Y-m-d", time());


        $dayCheck = str_replace('{$1}', $day, $this->getWorkDayCheck());

        //$this->content = date("w") == 4 ? str_replace('{#1}',$this->otherContent,$this->content) :  str_replace('{#1}',"",$this->content);
        $this->content = str_replace('{#1}',"",$this->content);
        /*
         * 工作日执行推送
         */

        if (!(int)$this->curl($dayCheck,1, 1)){
            //1：日常工作日TAPD推送
            $data = $this->curl(self::NOTICEURL, 0,1,0,json_encode($this->getResultData()));
            $obj = json_decode($data);
            $this->setRes($obj->errcode);
            $this->setMessage($obj->errmsg);
        }

        return $this->exec($this->getRes(),$this->getMessage());
    }
}
class Treasure extends robot {
    private $content = "{#1} 今天夺宝券发放数量已经达到预警值{#2}张";
    private $resultData;
    private $msgtype = 'text';
    public function __construct($num = 0)
    {
        $data = date('Y-m-d' , time());
        $patterns = array('/{#1}/','/{#2}/');
        $replace = array($data, $num);
        $this->content =  preg_replace($patterns, $replace, $this->content);
    }

    /**
     * @return string
     */
    public function getMsgtype()
    {
        return $this->msgtype;
    }

    /**
     * @param string $msgtype
     */
    public function setMsgtype($msgtype)
    {
        $this->msgtype = $msgtype;
    }
    /**
     * @return mixed
     */
    public function getResultData()
    {
        return array(
            'msgtype' => $this->getMsgtype(),
            'text' => array(
                'content' => $this->getContent()
            )
        );
    }

    public function getContent(){
        return $this->content;
    }

    /**
     * @param mixed $resultData
     */
    public function setResultData($resultData)
    {
        $this->resultData = $resultData;
    }
    function notice()
    {
        parent::notice(); // TODO: Change the autogenerated stub

        if (!(int)$this->curl(self::NOTICACT,0, 1,1)){
            $data = $this->curl(self::NOTICACT, 0,1,0,json_encode($this->getResultData()));
            $obj = json_decode($data);
            $this->setRes($obj->errcode);
            $this->setMessage($obj->errmsg);
        }

        return $this->exec($this->getRes(),$this->getMessage());
    }


}

class robotFactory {
    public static function createRobot($model,  $other = '')
    {
        switch ($model) {
            case 'TAPD':
                return new TAPD();
                break;

            case 'Treasure':
                return new Treasure($other);
                break;
        }
    }
}
/**
 * 使用方法
 *
 */

//$a = robotFactory::createRobot("TAPD");
//$a->notice();


//$a = robotFactory::createRobot("Treasure",100000);
//$a->notice();
